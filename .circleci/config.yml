# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:2.7

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            virtualenv pyenv
            source pyenv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./pyenv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: create dist package
          command: |
            source pyenv/bin/activate
            ./scripts/createpackage

      - save_cache:
          paths:
            - ./dist
          key: v1-dist-{{ .Enviroment.CIRCLE_SHA1 }}

  deploy:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:2.7

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            virtualenv pyenv
            source pyenv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./pyenv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - deploy:
          name: Deploy to server
          command: |
            source pyenv/bin/activate
            ./scripts/createpackage
            ./scripts/uploadpackage
            exit
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
